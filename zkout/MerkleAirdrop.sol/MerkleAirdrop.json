{"abi":null,"bytecode":{"object":""},"assembly":"\t.text\n\t.file\t\"MerkleAirdrop.sol:MerkleAirdrop\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[14]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r3, stack[@ptr_return_data]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_7\n\tadd\t128, r0, r7\n\tst.1\t64, r7\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_81\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_4[0], r2, r4\n\tjump.eq\t@.BB0_16\n\tsub.s!\t@CPI0_5[0], r2, r1\n\tjump.eq\t@.BB0_26\n\tsub.s!\t@CPI0_6[0], r2, r1\n\tjump.ne\t@.BB0_81\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_81\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[14]\n\tadd\t0, r0, stack-[13]\n\tadd\t32773, r0, r1\n\tadd\t68, r0, r3\n\tcontext.sp\tr4\n\tsub.s\t14, r4, r4\n\tshl.s\t5, r4, r4\n\tadd\t@CPI0_14[0], r0, r2\n\tnear_call\tr0, @__system_request, @DEFAULT_UNWIND\n\tand\t@CPI0_2[0], r1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_28[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_7:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_81\n\tadd\t31, r3, r2\n\tand\t@CPI0_1[0], r2, r2\n\tadd\t192, r2, r2\n\tst.1\t64, r2\n\tand\t31, r3, r2\n\tshr.s!\t5, r3, r4\n\tjump.eq\t@.BB0_11\n\tadd\tr0, r0, r5\n.BB0_10:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tadd\t192, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_10\n.BB0_11:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_13\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tshl.s\t3, r2, r2\n\tadd\t192, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_13:\n\tsub.s!\t64, r3, r1\n\tjump.lt\t@.BB0_81\n\tld.1\t192, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_81\n\tld.1\t224, r2\n\tst.1\t128, r1\n\tst.1\t160, r2\n\tst.2\t320, r0\n\tst.2\t352, r1\n\tadd\t32, r0, r1\n\tst.2\t384, r1\n\tst.2\t416, r2\n\tst.2\t256, r1\n\tadd\t2, r0, r1\n\tst.2\t288, r1\n\tadd\t@CPI0_3[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_16:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t100, r3, r4\n\tjump.lt\t@.BB0_81\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_81\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_2[0], r2, r4\n\tjump.gt\t@.BB0_81\n\tptr.add.s\t68, r1, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI0_7[0], r4, r5\n\tjump.gt\t@.BB0_81\n\tadd\t35, r4, r5\n\tsub!\tr5, r3, r5\n\tjump.ge\t@.BB0_81\n\tadd\t4, r4, r5\n\tptr.add\tr1, r5, r5\n\tld\tr5, r5\n\tsub.s!\t@CPI0_7[0], r5, r6\n\tjump.gt\t@.BB0_81\n\tshl.s\t5, r5, r5\n\tadd\tr4, r5, r4\n\tadd\t36, r4, r4\n\tsub!\tr4, r3, r3\n\tjump.gt\t@.BB0_81\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tst.1\t160, r2\n\tst.1\t192, r1\n\tadd\t64, r0, r1\n\tst.1\t128, r1\n\tadd\t224, r0, r1\n\tst.1\t64, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr7, r0, stack-[6]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_81\n\tld\tr1, r3\n\tld.1\t64, r1\n\tadd\t32, r0, r4\n\tst.1.inc\tr1, r4, r2\n\tst.1\tr2, r3\n\tsub.s!\t@CPI0_9[0], r1, r3\n\tjump.lt\t@.BB0_28\n.BB0_25:\n\tadd\t@CPI0_27[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_24[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_26:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_81\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[12]\n\tadd\t32, r0, stack-[11]\n\tadd\t32773, r0, r1\n\tadd\t68, r0, r3\n\tcontext.sp\tr4\n\tsub.s\t12, r4, r4\n\tshl.s\t5, r4, r4\n\tadd\t@CPI0_14[0], r0, r2\n\tnear_call\tr0, @__system_request, @DEFAULT_UNWIND\n\tst.1\t128, r1\n\tadd\t@CPI0_28[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_28:\n\tadd\tr4, r0, stack-[5]\n\tadd\t64, r1, r3\n\tadd\tr3, r0, stack-[10]\n\tst.1\t64, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_81\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[4]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_11[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_81\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_47\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t68, r1, r2\n\tld\tr2, r3\n\tadd\t4, r3, r2\n\tptr.add\tr1, r2, r2\n\tld\tr2, r2\n\tshl.s\t5, r2, r4\n\tsub.s\t32, r0, stack-[1]\n\tadd\t63, r4, r5\n\tand\tstack-[1], r5, r6\n\tld.1\t64, r5\n\tadd\tr5, r0, stack-[9]\n\tadd\tr6, r5, r5\n\tsub!\tr5, r6, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI0_7[0], r5, r7\n\tjump.gt\t@.BB0_25\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB0_25\n\tst.1\t64, r5\n\tadd\tstack-[9], r0, r5\n\tst.1.inc\tr5, r2, r5\n\tadd\tr5, r0, stack-[8]\n\tadd\t36, r3, r3\n\tadd\tr4, r3, r4\n\tsub!\tr3, r4, r5\n\tjump.ge\t@.BB0_37\n\tadd\tstack-[9], r0, r2\n.BB0_35:\n\tptr.add\tr1, r3, r5\n\tld\tr5, r5\n\tadd\t32, r2, r2\n\tst.1\tr2, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r4, r5\n\tjump.lt\t@.BB0_35\n\tadd\tstack-[9], r0, r1\n\tld.1\tr1, r2\n.BB0_37:\n\tsub!\tr2, r0, r1\n\tjump.ne\t@.BB0_48\n\tadd\tstack-[4], r0, r3\n\tjump\t@.BB0_39\n.BB0_47:\n\tadd\t@CPI0_12[0], r0, r1\n\tadd\tstack-[10], r0, r3\n\tst.1\tr3, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r3, r1\n\tor\t@CPI0_13[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_48:\n\tadd\t32784, r0, stack-[7]\n\tadd\tr0, r0, r2\n\tadd\tstack-[4], r0, r3\n.BB0_52:\n\tadd\tr2, r0, stack-[10]\n\tshl.s\t5, r2, r1\n\tadd\tstack-[8], r1, r1\n\tld.1\tr1, r1\n\tsub!\tr3, r1, r2\n\tjump.ge\t@.BB0_49\n\tst.1\t0, r3\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_11[0], r1, r1\n\tadd\tstack-[7], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_81\n\tjump\t@.BB0_50\n.BB0_49:\n\tst.1\t0, r1\n\tst.1\t32, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_11[0], r1, r1\n\tadd\tstack-[7], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_81\n.BB0_50:\n\tadd\tstack-[10], r0, r2\n\tld\tr1, r3\n\tadd\t1, r2, r2\n\tadd\tstack-[9], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB0_52\n.BB0_39:\n\tadd\tr3, r0, stack-[4]\n\tadd\t@CPI0_14[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[10]\n\tst.2\t4, r1\n\tadd\tstack-[5], r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_15[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_74\n\tld\tr1, r1\n\tsub!\tstack-[4], r1, r1\n\tjump.ne\t@.BB0_55\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_11[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_81\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tor\t1, r2, r2\n\tsstore\tr1, r2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tld.1\t64, r3\n\tadd\t32, r3, r4\n\tst.1\tr4, r1\n\tand\t@CPI0_2[0], r2, r1\n\tst.1\tr3, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.ge\tr4, r0, r3\n\tshl.s\t64, r3, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_11[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\tr3, r0, stack-[9]\n\tadd\t@CPI0_17[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_81\n\tld.1\t64, r3\n\tadd\t68, r3, r1\n\tadd\t10000, r0, r2\n\tst.1\tr1, r2\n\tadd\t32, r3, r2\n\tadd\t@CPI0_18[0], r0, r1\n\tadd\tr2, r0, stack-[7]\n\tst.1\tr2, r1\n\tadd\t36, r3, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\tr1, r2\n\tadd\t68, r0, r1\n\tst.1\tr3, r1\n\tadd\tr3, r0, stack-[8]\n\tsub.s!\t@CPI0_19[0], r3, r1\n\tjump.gt\t@.BB0_25\n\tadd\tstack-[8], r0, r1\n\tadd\t128, r1, r1\n\tst.1\t64, r1\n\tadd\t@CPI0_14[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[10], r0, r1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_15[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_74\n\tadd\tstack-[8], r0, r2\n\tld.1\tr2, r2\n\tld\tr1, r3\n\tcontext.gas_left\tr1\n\tand\t@CPI0_2[0], r3, r3\n\tadd\tr3, r0, stack-[8]\n\tsub.s!\t4, r3, r3\n\tjump.ne\t@.BB0_57\n\tadd\tstack[@returndatasize], r0, r1\n\tjump\t@.BB0_58\n.BB0_55:\n\tld.1\t64, r1\n\tadd\t@CPI0_16[0], r0, r2\n.BB0_56:\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_57:\n\tadd\t@CPI0_0[0], r0, r3\n\tadd\tstack-[7], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd.ge\tr3, r0, r5\n\tshl.s\t64, r5, r4\n\tsub.s!\t@CPI0_0[0], r2, r5\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r4, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr2, r1, r1\n\tadd\tstack-[8], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand\t1, r2, stack-[9]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r1\n.BB0_58:\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_63\n\tadd\t96, r0, stack-[10]\n.BB0_60:\n\tadd\tstack-[10], r0, r1\n\tld.1\tr1, r1\n\tsub!\tstack-[9], r0, r2\n\tjump.ne\t@.BB0_70\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_75\n\tld.1\t64, r1\n\tadd\t@CPI0_26[0], r0, r2\n\tjump\t@.BB0_56\n.BB0_63:\n\tadd\t31, r1, r2\n\tand\tstack-[1], r2, r2\n\tadd\t63, r2, r2\n\tand\tstack-[1], r2, r2\n\tld.1\t64, r3\n\tadd\tr3, r2, r2\n\tadd\tr3, r0, stack-[10]\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI0_7[0], r2, r4\n\tjump.gt\t@.BB0_25\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_25\n\tst.1\t64, r2\n\tand\t31, r1, r2\n\tadd\tstack-[10], r0, r3\n\tst.1.inc\tr3, r1, r7\n\tptr.add\tstack[@ptr_return_data], r0, r3\n\tshr.s!\t5, r1, r1\n\tjump.eq\t@.BB0_68\n\tadd\tr0, r0, r4\n.BB0_67:\n\tshl.s\t5, r4, r5\n\tadd\tr7, r5, r6\n\tptr.add\tr3, r5, r5\n\tld\tr5, r5\n\tst.1\tr6, r5\n\tadd\t1, r4, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_67\n.BB0_68:\n\tadd\tr7, r0, stack-[6]\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB0_60\n\tshl.s\t5, r1, r1\n\tptr.add\tr3, r1, r3\n\tadd\tstack-[6], r1, r1\n\tshl.s\t3, r2, r2\n\tld.1\tr1, r4\n\tshl\tr4, r2, r4\n\tshr\tr4, r2, r4\n\tld\tr3, r3\n\tsub\t256, r2, r2\n\tshr\tr3, r2, r3\n\tshl\tr3, r2, r2\n\tor\tr2, r4, r2\n\tst.1\tr1, r2\n\tjump\t@.BB0_60\n.BB0_70:\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_77\n\tadd\t@CPI0_20[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[8], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_74\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_76\n\tld.1\t64, r1\n\tadd\t@CPI0_25[0], r0, r2\n\tjump\t@.BB0_83\n.BB0_74:\n\trevert\n.BB0_75:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[6], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_76:\n\tadd\tstack-[10], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_80\n.BB0_77:\n\tadd\t@CPI0_22[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_22[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_22[0], r1, r1\n\tadd.ne\tr3, r0, r2\n\tsub!\tr2, r0, r1\n\tadd\tstack-[6], r0, r1\n\tjump.ne\t@.BB0_81\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_81\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_82\n.BB0_80:\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_81:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_82:\n\tld.1\t64, r1\n\tadd\t@CPI0_23[0], r0, r2\n.BB0_83:\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[8], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_24[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n__cxa_throw:\n.func_begin1:\n\trevert\n.func_end1:\n\n__system_request:\n.func_begin2:\n\tadd\tr1, r0, r5\n\tst.2\t0, r2\n\tadd\t4, r0, r1\n.BB2_2:\n\tshr.s\t5, r4, r2\n\tadd\tstack[r2], r0, r2\n\tst.2.inc\tr1, r2, r1\n\tadd\t32, r4, r4\n\tsub!\tr1, r3, r2\n\tjump.lt\t@.BB2_2\n\tadd\t@CPI2_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI2_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI2_1[0], r1, r1\n\tadd\tr5, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_4\n\tld\tr1, r1\n\tret\n.BB2_4:\n\trevert\n.func_end2:\n\n__farcall:\n.func_begin3:\n.tmp0:\n\tfar_call\tr1, r2, @.BB3_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB3_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end3:\n\n__staticcall:\n.func_begin4:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB4_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB4_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end4:\n\n\t.data\n\t.p2align\t5, 0x0\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5, 0x0\nptr_calldata:\n.cell\t0\n\n\t.p2align\t5, 0x0\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI2_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 8589934560\nCPI0_2:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_3:\n\t.cell 53919893334301279589334030174039261362486096052542264263037304176640\nCPI0_4:\n\t.cell 2699577543\nCPI0_5:\n\t.cell 1230571095\nCPI0_6:\n\t.cell 285121256\nCPI0_7:\n\t.cell 18446744073709551615\nCPI0_8:\n\t.cell 904625697166532776746648320380374280103671760270919310422659032842162405376\nCPI0_9:\n\t.cell 18446744073709551552\nCPI0_10:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_11:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_12:\n\t.cell 12103061430457322179269736620810990162219608479112938429970068509051305590784\nCPI0_13:\n\t.cell 316912650057057350374175801344\nCPI0_14:\n\t.cell 22182216476136578060272566318850604970565072242024486780356928325126096266030\nCPI0_15:\n\t.cell 904625751086426111047927909714404454142933107862120802609382293630030446592\nCPI0_16:\n\t.cell -16524795228391525870074902848325516126991519720444302067175443534636946292736\nCPI0_17:\n\t.cell -18057953172242135275237236116701118361133098727204600997829254020206695857558\nCPI0_18:\n\t.cell -39341301877480157781710804024396230103289065588583741745104145964028735258624\nCPI0_19:\n\t.cell 18446744073709551487\nCPI0_20:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI0_21:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI0_22:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_23:\n\t.cell 37295821876700504889304837296037907613075394649501056392550260273557750677504\nCPI0_24:\n\t.cell 2852213850513516153367582212096\nCPI0_25:\n\t.cell -46321960365604724831933507365171173232996739913398926471486875190478029979648\nCPI0_26:\n\t.cell 9113247101063757011529551392225999353373832475738586725164814963572685668352\nCPI0_27:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_28:\n\t.cell 2535301202817642044428229017600\nCPI2_1:\n\t.cell 904625751086426111047927909714404454142933102474605751639407337269041823744\n","methodIdentifiers":{"claimAirdrop(address,uint256,bytes32[])":"a0e848c7","getMerkleRoot()":"49590657","getTokenAddress()":"10fe9ae8"},"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"jump_table_density_threshold":null,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.3a2587f6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_merkleRoot\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MerkleAirdrop__AlreadyClaimed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MerkleAirdrop__ProofVerifyFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"claimAirdrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/MerkleAirdrop.sol\":\"MerkleAirdrop\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x6400c4bee15052e043e5d10315135972529bd1c8012f43da494dc6b4f4661058\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5d3d47d35af4373743a559ea4b9b7ecfe4bab6f0703f410c1e59959b7966ac\",\"dweb:/ipfs/QmTHdoghh4WLu4yURjGEgRk162pcwwdsG52MPGa12GqnGR\"]},\"src/MerkleAirdrop.sol\":{\"keccak256\":\"0x9d5a3bd4483dcb6eca340d62a8008044643e1976f4c44be2a83b836b2a15d049\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a441a6c1c2a6736cc362f340bf24c0bdce6c31290144be8ddada178200f337c\",\"dweb:/ipfs/QmZ8jXVcutfkNJpsXQ3UgquCBiGgykjatWruvQxwvb4bQi\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":"1.0.1","zk_version":"1.4.1"},"storageLayout":{"storage":[],"types":{}},"userdoc":{},"devdoc":{},"irOptimized":"/// @use-src 33:\"src/MerkleAirdrop.sol\"\nobject \"MerkleAirdrop_48845\" {\n    code {\n        {\n            /// @src 33:238:1739  \"contract MerkleAirdrop {...\"\n            let _1 := memoryguard(0xc0)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"MerkleAirdrop_48845\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 64)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 33:238:1739  \"contract MerkleAirdrop {...\"\n            let value := mload(_1)\n            let _2 := and(value, sub(shl(160, 1), 1))\n            if iszero(eq(value, _2))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 33:238:1739  \"contract MerkleAirdrop {...\"\n            let value_1 := mload(add(_1, 32))\n            /// @src 33:713:737  \"i_token = IERC20(_token)\"\n            mstore(128, /** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ _2)\n            /// @src 33:747:773  \"i_merkleRoot = _merkleRoot\"\n            mstore(160, value_1)\n            /// @src 33:238:1739  \"contract MerkleAirdrop {...\"\n            let _3 := mload(64)\n            let _4 := datasize(\"MerkleAirdrop_48845_deployed\")\n            codecopy(_3, dataoffset(\"MerkleAirdrop_48845_deployed\"), _4)\n            setimmutable(_3, \"48725\", mload(/** @src 33:713:737  \"i_token = IERC20(_token)\" */ 128))\n            /// @src 33:238:1739  \"contract MerkleAirdrop {...\"\n            setimmutable(_3, \"48727\", mload(/** @src 33:747:773  \"i_merkleRoot = _merkleRoot\" */ 160))\n            /// @src 33:238:1739  \"contract MerkleAirdrop {...\"\n            return(_3, _4)\n        }\n    }\n    /// @use-src 29:\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\", 30:\"lib/openzeppelin-contracts/contracts/utils/Address.sol\", 32:\"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\", 33:\"src/MerkleAirdrop.sol\"\n    object \"MerkleAirdrop_48845_deployed\" {\n        code {\n            {\n                /// @src 33:238:1739  \"contract MerkleAirdrop {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x10fe9ae8 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        mstore(_1, and(/** @src 33:1722:1729  \"i_token\" */ loadimmutable(\"48725\"), /** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ sub(shl(160, 1), 1)))\n                        return(_1, 32)\n                    }\n                    case 0x49590657 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos := mload(64)\n                        mstore(memPos, /** @src 33:1615:1627  \"i_merkleRoot\" */ loadimmutable(\"48727\"))\n                        /// @src 33:238:1739  \"contract MerkleAirdrop {...\"\n                        return(memPos, 32)\n                    }\n                    case 0xa0e848c7 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                        if iszero(eq(calldataload(4), and(calldataload(4), sub(shl(160, 1), 1)))) { revert(0, 0) }\n                        if gt(calldataload(68), 0xffffffffffffffff) { revert(0, 0) }\n                        if iszero(slt(add(calldataload(68), 35), calldatasize())) { revert(0, 0) }\n                        if gt(calldataload(add(4, calldataload(68))), 0xffffffffffffffff) { revert(0, 0) }\n                        if gt(add(add(calldataload(68), shl(5, calldataload(add(4, calldataload(68))))), 36), calldatasize()) { revert(0, 0) }\n                        /// @src 33:934:961  \"abi.encode(account, amount)\"\n                        let expr_mpos := /** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ mload(64)\n                        /// @src 33:934:961  \"abi.encode(account, amount)\"\n                        let _2 := add(expr_mpos, /** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ 32)\n                        /// @src 33:934:961  \"abi.encode(account, amount)\"\n                        let _3 := sub(abi_encode_address_uint256(_2, /** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ calldataload(4), calldataload(36)), /** @src 33:934:961  \"abi.encode(account, amount)\" */ expr_mpos)\n                        mstore(expr_mpos, add(_3, not(31)))\n                        finalize_allocation(expr_mpos, _3)\n                        /// @src 33:924:962  \"keccak256(abi.encode(account, amount))\"\n                        let _4 := keccak256(/** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ _2, mload(/** @src 33:924:962  \"keccak256(abi.encode(account, amount))\" */ expr_mpos))\n                        /// @src 33:238:1739  \"contract MerkleAirdrop {...\"\n                        let outPtr := mload(64)\n                        let _5 := add(outPtr, 32)\n                        mstore(_5, _4)\n                        mstore(outPtr, 32)\n                        let newFreePtr := add(outPtr, 64)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, outPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        mstore(64, newFreePtr)\n                        /// @src 33:901:964  \"keccak256(bytes.concat(keccak256(abi.encode(account, amount))))\"\n                        let expr := keccak256(/** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ _5, mload(/** @src 33:901:964  \"keccak256(bytes.concat(keccak256(abi.encode(account, amount))))\" */ outPtr))\n                        /// @src 33:238:1739  \"contract MerkleAirdrop {...\"\n                        mstore(0, /** @src 33:1158:1168  \"msg.sender\" */ caller())\n                        /// @src 33:238:1739  \"contract MerkleAirdrop {...\"\n                        let _6 := 1\n                        mstore(32, 1)\n                        /// @src 33:1143:1234  \"if (hasClaimed[msg.sender]) {...\"\n                        if /** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ and(sload(keccak256(0, 64)), 0xff)\n                        /// @src 33:1143:1234  \"if (hasClaimed[msg.sender]) {...\"\n                        {\n                            /// @src 33:1192:1223  \"MerkleAirdrop__AlreadyClaimed()\"\n                            mstore(newFreePtr, shl(224, 0x1ac2170b))\n                            revert(newFreePtr, /** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ 4)\n                        }\n                        let memPtr := mload(64)\n                        finalize_allocation(memPtr, add(shl(5, calldataload(add(4, calldataload(68)))), 32))\n                        let dst := memPtr\n                        mstore(memPtr, calldataload(add(4, calldataload(68))))\n                        dst := add(memPtr, 32)\n                        let src := add(calldataload(68), 36)\n                        for { }\n                        lt(src, add(add(calldataload(68), shl(5, calldataload(add(4, calldataload(68))))), 36))\n                        { src := add(src, 32) }\n                        {\n                            mstore(dst, calldataload(src))\n                            dst := add(dst, 32)\n                        }\n                        /// @src 32:2069:2096  \"bytes32 computedHash = leaf\"\n                        let var_computedHash := expr\n                        /// @src 32:2111:2124  \"uint256 i = 0\"\n                        let var_i := /** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ 0\n                        /// @src 32:2106:2222  \"for (uint256 i = 0; i < proof.length; i++) {...\"\n                        for { }\n                        /** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ _6\n                        /// @src 32:2111:2124  \"uint256 i = 0\"\n                        {\n                            /// @src 32:2144:2147  \"i++\"\n                            var_i := /** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ add(/** @src 32:2144:2147  \"i++\" */ var_i, /** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ _6)\n                        }\n                        /// @src 32:2144:2147  \"i++\"\n                        {\n                            /// @src 32:2126:2142  \"i < proof.length\"\n                            if iszero(lt(var_i, /** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ mload(/** @src 32:2130:2142  \"proof.length\" */ memPtr)))\n                            /// @src 32:2126:2142  \"i < proof.length\"\n                            { break }\n                            /// @src 33:238:1739  \"contract MerkleAirdrop {...\"\n                            let _7 := mload(add(add(memPtr, shl(5, var_i)), 32))\n                            /// @src 32:9318:9369  \"a < b ? _efficientHash(a, b) : _efficientHash(b, a)\"\n                            let expr_1 := /** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ 0\n                            /// @src 32:9318:9369  \"a < b ? _efficientHash(a, b) : _efficientHash(b, a)\"\n                            switch /** @src 32:9318:9323  \"a < b\" */ lt(var_computedHash, _7)\n                            case /** @src 32:9318:9369  \"a < b ? _efficientHash(a, b) : _efficientHash(b, a)\" */ 0 {\n                                /// @src 32:9632:9751  \"assembly {...\"\n                                mstore(/** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ 0, /** @src 32:9632:9751  \"assembly {...\" */ _7)\n                                mstore(/** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ 32, /** @src 32:9632:9751  \"assembly {...\" */ var_computedHash)\n                                /// @src 32:9318:9369  \"a < b ? _efficientHash(a, b) : _efficientHash(b, a)\"\n                                expr_1 := /** @src 32:9632:9751  \"assembly {...\" */ keccak256(/** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ 0, 64)\n                            }\n                            default /// @src 32:9318:9369  \"a < b ? _efficientHash(a, b) : _efficientHash(b, a)\"\n                            {\n                                /// @src 32:9632:9751  \"assembly {...\"\n                                mstore(/** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ 0, /** @src 32:9632:9751  \"assembly {...\" */ var_computedHash)\n                                mstore(/** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ 32, /** @src 32:9632:9751  \"assembly {...\" */ _7)\n                                /// @src 32:9318:9369  \"a < b ? _efficientHash(a, b) : _efficientHash(b, a)\"\n                                expr_1 := /** @src 32:9632:9751  \"assembly {...\" */ keccak256(/** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ 0, 64)\n                            }\n                            /// @src 32:2163:2211  \"computedHash = _hashPair(computedHash, proof[i])\"\n                            var_computedHash := expr_1\n                        }\n                        /// @src 33:1243:1348  \"if (!proof.verify(i_merkleRoot, leaf)) {...\"\n                        if /** @src 33:1247:1280  \"!proof.verify(i_merkleRoot, leaf)\" */ iszero(/** @src 32:1379:1412  \"processProof(proof, leaf) == root\" */ eq(var_computedHash, /** @src 33:1261:1273  \"i_merkleRoot\" */ loadimmutable(\"48727\")))\n                        /// @src 33:1243:1348  \"if (!proof.verify(i_merkleRoot, leaf)) {...\"\n                        {\n                            /// @src 33:1303:1337  \"MerkleAirdrop__ProofVerifyFailed()\"\n                            let _8 := /** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ mload(64)\n                            /// @src 33:1303:1337  \"MerkleAirdrop__ProofVerifyFailed()\"\n                            mstore(_8, shl(224, 0xdb774c1f))\n                            revert(_8, /** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ 4)\n                        }\n                        mstore(0, /** @src 33:1158:1168  \"msg.sender\" */ caller())\n                        /// @src 33:238:1739  \"contract MerkleAirdrop {...\"\n                        mstore(32, 1)\n                        let dataSlot := keccak256(0, 64)\n                        sstore(dataSlot, or(and(sload(dataSlot), not(255)), 1))\n                        /// @src 33:1402:1426  \"Claimed(account, amount)\"\n                        let _9 := /** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ mload(64)\n                        /// @src 33:1402:1426  \"Claimed(account, amount)\"\n                        log1(_9, sub(abi_encode_address_uint256(_9, /** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ calldataload(4), calldataload(36)), /** @src 33:1402:1426  \"Claimed(account, amount)\" */ _9), 0xd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a)\n                        /// @src 29:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                        let expr_mpos_1 := /** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ mload(64)\n                        /// @src 29:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                        let _10 := add(expr_mpos_1, /** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ 32)\n                        /// @src 29:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                        mstore(_10, /** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ shl(224, 0xa9059cbb))\n                        mstore(/** @src 29:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ add(expr_mpos_1, /** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ 36), /** @src 33:1158:1168  \"msg.sender\" */ caller())\n                        /// @src 33:238:1739  \"contract MerkleAirdrop {...\"\n                        mstore(add(/** @src 29:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ expr_mpos_1, /** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ 68), /** @src 33:1500:1505  \"10000\" */ 0x2710)\n                        /// @src 29:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                        mstore(expr_mpos_1, /** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ 68)\n                        let newFreePtr_1 := add(expr_mpos_1, 128)\n                        if or(gt(newFreePtr_1, 0xffffffffffffffff), lt(newFreePtr_1, expr_mpos_1))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        mstore(64, newFreePtr_1)\n                        let _11 := and(/** @src 33:1467:1474  \"i_token\" */ loadimmutable(\"48725\"), /** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ sub(shl(160, 1), 1))\n                        /// @src 30:3462:3493  \"target.call{value: value}(data)\"\n                        let expr_component := call(gas(), _11, /** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ 0, /** @src 30:3462:3493  \"target.call{value: value}(data)\" */ _10, mload(expr_mpos_1), /** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ 0, 0)\n                        /// @src 30:3462:3493  \"target.call{value: value}(data)\"\n                        let data := /** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ 0\n                        switch returndatasize()\n                        case 0 { data := 96 }\n                        default {\n                            let _12 := returndatasize()\n                            if gt(_12, 0xffffffffffffffff)\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(0, 36)\n                            }\n                            let memPtr_1 := mload(64)\n                            finalize_allocation(memPtr_1, add(and(add(_12, 0x1f), /** @src 33:934:961  \"abi.encode(account, amount)\" */ not(31)), /** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ 32))\n                            mstore(memPtr_1, _12)\n                            data := memPtr_1\n                            returndatacopy(add(memPtr_1, 32), 0, returndatasize())\n                        }\n                        /// @src 30:3503:3565  \"return verifyCallResultFromTarget(target, success, returndata)\"\n                        let var_mpos := /** @src 30:3510:3565  \"verifyCallResultFromTarget(target, success, returndata)\" */ fun_verifyCallResultFromTarget(_11, expr_component, /** @src 30:3462:3493  \"target.call{value: value}(data)\" */ data)\n                        /// @src 29:4551:4568  \"returndata.length\"\n                        let expr_2 := /** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ mload(/** @src 29:4551:4568  \"returndata.length\" */ var_mpos)\n                        /// @src 29:4551:4608  \"returndata.length != 0 && !abi.decode(returndata, (bool))\"\n                        let expr_3 := /** @src 29:4551:4573  \"returndata.length != 0\" */ iszero(iszero(expr_2))\n                        /// @src 29:4551:4608  \"returndata.length != 0 && !abi.decode(returndata, (bool))\"\n                        if expr_3\n                        {\n                            /// @src 33:238:1739  \"contract MerkleAirdrop {...\"\n                            if slt(sub(/** @src 29:4578:4608  \"abi.decode(returndata, (bool))\" */ add(var_mpos, expr_2), var_mpos), /** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ 32) { revert(0, 0) }\n                            let value := mload(/** @src 29:4578:4608  \"abi.decode(returndata, (bool))\" */ add(var_mpos, /** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ 32))\n                            let _13 := iszero(value)\n                            if iszero(eq(value, iszero(_13))) { revert(0, 0) }\n                            /// @src 29:4551:4608  \"returndata.length != 0 && !abi.decode(returndata, (bool))\"\n                            expr_3 := _13\n                        }\n                        /// @src 29:4547:4682  \"if (returndata.length != 0 && !abi.decode(returndata, (bool))) {...\"\n                        if expr_3\n                        {\n                            /// @src 29:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                            let _14 := /** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ mload(64)\n                            /// @src 29:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                            mstore(_14, shl(224, 0x5274afe7))\n                            /// @src 33:238:1739  \"contract MerkleAirdrop {...\"\n                            mstore(/** @src 29:4631:4671  \"SafeERC20FailedOperation(address(token))\" */ add(_14, /** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ 4), _11)\n                            /// @src 29:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                            revert(_14, /** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ 36)\n                        }\n                        return(0, 0)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_address_uint256(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 32), value1)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), /** @src 33:934:961  \"abi.encode(account, amount)\" */ not(31)))\n                /// @src 33:238:1739  \"contract MerkleAirdrop {...\"\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            /// @ast-id 48095 @src 30:4625:5207  \"function verifyCallResultFromTarget(...\"\n            function fun_verifyCallResultFromTarget(var_target, var_success, var_returndata_mpos) -> var_mpos\n            {\n                /// @src 30:4793:5201  \"if (!success) {...\"\n                switch /** @src 30:4797:4805  \"!success\" */ iszero(var_success)\n                case /** @src 30:4793:5201  \"if (!success) {...\" */ 0 {\n                    /// @src 30:5045:5094  \"returndata.length == 0 && target.code.length == 0\"\n                    let expr := /** @src 30:5045:5067  \"returndata.length == 0\" */ iszero(/** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ mload(/** @src 30:5045:5062  \"returndata.length\" */ var_returndata_mpos))\n                    /// @src 30:5045:5094  \"returndata.length == 0 && target.code.length == 0\"\n                    if expr\n                    {\n                        expr := /** @src 30:5071:5094  \"target.code.length == 0\" */ iszero(/** @src 30:5071:5089  \"target.code.length\" */ extcodesize(var_target))\n                    }\n                    /// @src 30:5041:5160  \"if (returndata.length == 0 && target.code.length == 0) {...\"\n                    if expr\n                    {\n                        /// @src 30:5121:5145  \"AddressEmptyCode(target)\"\n                        let _1 := /** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ mload(64)\n                        /// @src 30:5121:5145  \"AddressEmptyCode(target)\"\n                        mstore(_1, shl(224, 0x9996b315))\n                        /// @src 33:238:1739  \"contract MerkleAirdrop {...\"\n                        mstore(/** @src 30:5121:5145  \"AddressEmptyCode(target)\" */ add(_1, 4), /** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ and(var_target, sub(shl(160, 1), 1)))\n                        /// @src 30:5121:5145  \"AddressEmptyCode(target)\"\n                        revert(_1, /** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ 36)\n                    }\n                    /// @src 30:5173:5190  \"return returndata\"\n                    var_mpos := var_returndata_mpos\n                    leave\n                }\n                default /// @src 30:4793:5201  \"if (!success) {...\"\n                {\n                    /// @src 30:5870:6253  \"if (returndata.length > 0) {...\"\n                    switch /** @src 30:5874:5895  \"returndata.length > 0\" */ iszero(iszero(/** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ mload(/** @src 30:5874:5891  \"returndata.length\" */ var_returndata_mpos)))\n                    case /** @src 30:5870:6253  \"if (returndata.length > 0) {...\" */ 0 {\n                        /// @src 30:6225:6242  \"FailedInnerCall()\"\n                        let _2 := /** @src 33:238:1739  \"contract MerkleAirdrop {...\" */ mload(64)\n                        /// @src 30:6225:6242  \"FailedInnerCall()\"\n                        mstore(_2, shl(225, 0x0a12f521))\n                        revert(_2, 4)\n                    }\n                    default /// @src 30:5870:6253  \"if (returndata.length > 0) {...\"\n                    {\n                        /// @src 30:6046:6188  \"assembly {...\"\n                        revert(add(32, var_returndata_mpos), mload(var_returndata_mpos))\n                    }\n                }\n            }\n        }\n        data \".metadata\" hex\"a164736f6c6343000818000a\"\n    }\n}\n","hash":"010000b72cd8f5c0c9dab153f25016fa3f7a24dc782e305a1ab56adae332d9be","factoryDependencies":{},"id":33}